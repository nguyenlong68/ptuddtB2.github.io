<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABK
        DQAAAk1TRnQBSQFMAgEBBAEAAQgBAAEIAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD//8A/wD/AP8ABQABcAEG
        AZECCQHrAboBcwFmAZEBcgFJAU8BDwEOASEBcwETAesBSgEcAX4BcgERAWsBEAFZAXMBLwE6AVEBOALc
        AgAB8wEaARwBkwTbBAADBwHvAQcB7wIaAZkB8wH0Ae0BBwH0AhoBKAEnAZEBEAEJAZEBkAJJAZEBcgFJ
        ASIBJwIOAesBkgFzAbwB8wH2AQgBnQESAXEBmgGfAV4BVgEDAVEC3AHbAQAB3gH0AXgB7gIJAdwB3wEA
        A98DBwGTAQcB7wIaAZMBGwHzAfEBGgEcAe4BGgInAZEBugG0ASEBkAEVAZ0BkQEJAREBSQEUAQ8BDgFd
        ARMBSgEbAfQB8wL0ATgBNwF5AfQBWQETAWsBEQEJAtsB8wH0Ae8B7QHuAQcB7gLdAZgD3wMHAZMDGgGT
        AfIC8wEbARoB8AIaAXEBSQKRAboBkQIJAesCCAEZAigBJwEPAQMB6gE4ATYBLwE1Af8B9QNYAVEBWAFD
        AWwBEQEAAQkBmAEZAQABUgHwAfIB/wLuAQgC3wKYAQcC7gKTAd4B8AHeAfEBvQHzARoBGwHxAfUBGgFx
        AUkBcQG7AQkCuwG1AZEB7AEcAQcBKAFJAScBDwESAeoBNQEvATUC9QExATcBMQFRASoBMQEUAUgBbAEA
        AeIB2wGYARkB9AH2AfIBcQK8AZgCvAEHAdsBBwHuAvAC3QG8AbcBFgG9AvAC8wIaAZEBcgFQAbUBCQEo
        AbsB9wEHAfcB7AH4AXIBSQEhAQ8CEgEvAS4B7QL0AVgCMQFMAQMBUgE3AVkBZgG7AQcBCQGYAesCHAHw
        ArwB6gHbAQcB7gFRAbsBkwG9Ae4BBwGUApMBbgS3Ab0B8wIaAboBkQHvAQcBvAEcAbsB8gHwAZkBBwGZ
        AbwBTwFQAQ8B6gESAS4BUAP0ATcBUgFEAREBDwFRATcBZgETAdwBvAHdAfIB7gFRAfMBUgK8AfABtQF4
        AdsB8gHVAwcClAG3AY4BRAGOAeMBvQGUAb0C8wEaApEBmAG8AfACGQEHAZkB7gHxARkB8wFyAfEBCAHi
        AQAB6gP0AZMBWAEyAQ4BEQEQAUwBMQFTAXMB/wEaAfEBBwHxAfIBEwHvAQcBeAHyAe4B7wG6AfMB8AIH
        AZMBbgFoAY4DbwGOAhYB2AEbAvMBkQG1ARMBvAHwARkC7wEHAfIBvAHyAbwBTwHzAfABAAX0AfYBWQEy
        AQsBDwELAUwBMgETAWwBCQEZAfMB8gHvAZkB9gEbAfABBwHwAe8B8wHDAfMBGQIHASIB7QFEAW8BtwHw
        AW8BkwHyArcB8ALzAgkBKAHdAfABIQFPAQcBvAHxAvIB8wEPASgBQwGYAbsBGQQAATgBMgFdARABDgEr
        ATIB+wEJAdsBGQHzAe8BGwH3AfEBCAEHAbwB9AH1AQkBtALVAgcBcwHsAY4BkwGOAbcBQwG9AfIBtgG3
        Ad4B9AEbAQkBuwFJAbsBGQEcAQgBAAHwAe0B8wGuAg4BJwEoATYBLgE2AwAB9AE4BDIBWQFYAesBGQHb
        AQkBwwFZAXkBCAEcAdUBtAHcAcMB8QG0AZkC1QIHAW4B6wHtAbcBlAFuAW8BlALyA/MBGgEJAUkBKAG6
        AQkBmQKRAfIBrgFwAw8BJwEoAVcBEwFcBQABMgE4ASUBMgExAQgCGQG7AQkBGQFzAbUB9AHwAbwBtAHV
        AQkBUQK0AtUDBwGTAW4CkwG8AZMBvQG3AW4B8wHyAfMBGgEJAbsBJwG6AhkBCQGQAXEBkAEoAScCDwIo
        AVwBEwEIBAABwwFeAaACWQHyATgB4QEIAdsBuwL0AXkB8wGRAbsBtAfVBAcBGgO9AZMB8QEHAb0B9AEa
        AfMBBwEJAbsBLgEJARkBAAEJApABcgYoAZEBAAEuARQBAAHiAgAB+wEbARkB+wGZAeICGQEJAbsBCQK0
        AfQBtAnVAQcB8wEHAfMBGgHzAe4C8wIHARsB8wEbAhoBugG0AW0BCQIZAboBbAGQAnECKAEuAygBVwEA
        AuIBAAUZAfEB4QEZAgAB2wQJBLQB1QK0BNUCBwHuAe8E8wEaAvMBGgHzAxoBkQG6AZgCGQEJAbQBSQGQ
        ArsB6gFxAW0BEwEoATUBNgHiAwAGGQEJAhkBCQHbAgkBuwEJCrQB1QIHAhwB6wHzAfQC8wH0ARsB8wH0
        Ab0CGgFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP//wACAAs=
</value>
  </data>
</root>